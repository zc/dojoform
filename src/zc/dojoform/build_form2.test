build_form2 provides for generation of dojo widgets and forms.

Loading:

    js! dojo.require('zc.dojo');

Let's replace the zc.dojo widgets with custom constructors that just
output their parameters:

First example, the first example from the ajaxform tests

    js! load(test_examples + '/1.js')
    js! form = zc.dojo.build_form2(definition);
    js! dojo.body().appendChild(form.domNode);
    js! form.startup();

    js! expected_e = document.createElement('div');
    js! expected_e.innerHTML = read_file(test_examples + '/1.html');
    js! expected = expected_e.childNodes[0];

    js> check_element(expected, form.domNode)

Try again to make sure there aren't weird side effect, and also to
check widget cleanup:

    js! dojo.body().removeChild(form.domNode);
    js! form.destroyRecursive();
    js! nwidgets = dijit.registry.length;
    js! form = zc.dojo.build_form2(definition);
    js! dojo.body().appendChild(form.domNode);
    js! form.startup();

    js> check_element(expected, form.domNode)

    js! dojo.body().removeChild(form.domNode);
    js! form.destroyRecursive();

    js> dijit.registry.length == nwidgets;
    True

Now, we'll try a different example. It uses groups to do layout,
rather than left_fields.

    js! load(test_examples + '/2.js')
    js! form = zc.dojo.build_form2(definition, undefined, 1);
    js! dojo.body().appendChild(form.domNode);
    js! form.startup();

    js! expected_e.innerHTML = read_file(test_examples + '/2.html');
    js! expected = expected_e.childNodes[0];

    >>> try: js.check_element(js.expected, js.form.domNode)
    ... except AssertionError, v:
    ...     print v[0:3]
    ...     js.pretty_print_dom(v[3])
    ...     js.pretty_print_dom(v[4])


Because the happy field was set, none of the fields or the left div have the
zc-widget-hidden class:

    >>> for name in ['ExampleForm.first_name', 'ExampleForm.last_name',
    ...              'ExampleForm.happy', 'ExampleForm.siblings',
    ...              'ExampleForm.other', 'left']:
    ...     if ('zc-widget-hidden' in JS_.dojo.byId(name).className):
    ...         print name

Now, when we set the happy field to false:

    js! dijit.byId('ExampleForm.happy').set('value', false)

XXX Unfortunately, changing values doesn't seem to trogger an onchange
event in EnvJS. Really need to try 1.3 again. :/

    js> dijit.byId('ExampleForm.happy').onChange()

    >>> for name in ['zc-field-ExampleForm.first_name',
    ...              'zc-field-ExampleForm.last_name',
    ...              'zc-field-ExampleForm.happy',
    ...              'zc-field-ExampleForm.siblings',
    ...              'zc-field-ExampleForm.other',
    ...              'left']:
    ...     if ('zc-widget-hidden' in js.dojo.byId(name).className):
    ...         print name
    zc-field-ExampleForm.siblings
    zc-field-ExampleForm.other
    left


